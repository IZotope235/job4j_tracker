Используемые инструменты: jmap, jconsole;
Настройки VM: -Xlog:gc* -Xmx512m -Xms10m
Профилирование: Tracker
GC: G1
При долгой работе приложения без команд, происходит постепенное заполнение Eden кучи, предположительно из-за работы jconsole.

Требуется около 200 мб в куче на каждый 1 миллион записей.

Создание 2 млн записей: занимает около 400мб около 30 раз активируется GC и переносит данные из G1 Eden в G1 old gen, порождает создание ArrayList<Item> на 2000000 записей и суммарно 12 млн. объектов типа byte[], String, LocalDateTime, LocalDate, LocalTime, Item;

Просмотр 2 млн записей: порождает создание ArrayList<Item> на 2млн записей, но без создания объектов и занимает в Eden 30-50 мб после запуска GC - уничтожается.

Удаление 2 млн записей: сильно грузит процессор 90-100%. Происходит 10 минут. Порождает создание ArrayList<Item>, как и при просмотре. Занимает в Eden 30-40 мб.  Порождает ArrayList<Integer> collect на 2 млн. записей, и объектов типа Integer. После удаления ArrayList<Item> и удаленные объекты остаются в памяти из G1 old gen пока не сработает GC;

Создание более 3000000 записей вызывает - Exception in thread OutOfMemoryError.
